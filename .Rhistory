shiny::runApp()
y <- c(0,-1, 2)
x <- c(1:3)
y <- c(0,-1, 2)
lm(y ~ x)
x <- c(1:3)
y <- c(0,-1)
lm(y ~ x)
x <- c(1:2)
y <- c(0,-1)
lm(y ~ x)
x <- c(1)
y <- c(0)
lm(y ~ x)
runApp()
fit <- lm(c(960, 1110, 860, 760, 960, 785)~ c(100, 110, 100, 90, 97, 85))
print(fit)
runApp()
return(res)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp('~/Desktop/test')
runApp()
library(DT)
runApp()
data("marketing", package = "datarium")
head(marketing, 4)
fit <- lm(sales ~ youtube, data = marketing)
summary(fit)
plot(sales ~ youtube, data = marketing)
abline(fit)
p <- ggplot(marketing, aes(x = youtube, y = sales)) +
geom_point() +
stat_smooth(method = "lm") +
labs(title = bquote("Adj." ~ R^2 == .(signif(summary(fit)$adj.r.squared, 3))~
~ beta[0] == .(signif(fit$coef[[1]], 3))~
~ beta[1] == .(signif(fit$coef[[2]], 3))~
~ P-value == .(signif(summary(fit)$coef[2,4], 3)))) +
theme_minimal()
ggplotly(p)
p <- ggplot(marketing, aes(x = youtube, y = sales)) +
geom_point() +
stat_smooth(method = "lm") +
theme_minimal()
ggplotly(p)
runApp()
install.packages("plotly")
install.packages("plotly")
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
x <- NULL
is.empty(x)
runApp()
length(x)
runApp()
x <- "test"
length(x)
length(as.character(x))
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
x <- 1:3
y <- 1:4
fit <- lm(y ~ x)
y <- 2:4
fit <- lm(y ~ x)
fit
summary(fit)
fit$model
names(summary(fit))
summary(fit)$coefficients[,4]
summary(fit)$coefficients
runApp()
install.packages("plotly")
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
styler:::style_active_file()
runApp()
runApp()
styler:::style_active_file()
styler:::style_active_file()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
x <- 90, 100, 90, 80, 87, 75
x <- c(90, 100, 90, 80, 87, 75)
x <- c(90, 100, 90, 80, 87, 75)
y <- c(950, 1000, 850, 750, 900, 775)
fit <- lm(y~x)
plot(fit, which = c(1:3, 5))
fit <- lm(y~x)
x <- c(90, 100, 90, 80, 87, 75)
y <- c(950, 1000, 850, 750, 900, 775)
fit <- lm(y~x)
par(mfrow = c(2, 2))
plot(fit, which = c(1:3, 5))
resid(fit)
y <- x * rnorm(10)
y <- x * rnorm(7, mean = 10)
rnorm(7, mean = 10)
x <- c(92, 100, 90, 80, 87, 75)
y <- x * rnorm(6, mean = 10)
y
y <- round(x * rnorm(6, mean = 10))
fit <- lm(y~x)
par(mfrow = c(2, 2))
plot(fit, which = c(1:3, 5))
x <- rnorm(6, mean = 87)
y <- round(x * rnorm(6, mean = 10))
fit <- lm(y~x)
par(mfrow = c(2, 2))
plot(fit, which = c(1:3, 5))
resid(fit)
x
y
set.seed(42)
x <- round(rnorm(6, mean = 87))
y <- round(x * rnorm(6, mean = 10))
x
x <- round(rnorm(6, mean = 87, sd = 10))
y <- round(x * rnorm(6, mean = 10))
x
y
fit <- lm(y~x)
par(mfrow = c(2, 2))
plot(fit, which = c(1:3, 5))
set.seed(123)
x <- round(rnorm(6, mean = 87, sd = 10))
y <- round(x * rnorm(6, mean = 10))
x
y
fit <- lm(y~x)
par(mfrow = c(2, 2))
plot(fit, which = c(1:3, 5))
resid(fit)
set.seed(123)
x <- round(rnorm(10, mean = 87, sd = 10))
y <- round(x * rnorm(10, mean = 10))
x
y
fit <- lm(y~x)
par(mfrow = c(2, 2))
plot(fit, which = c(1:3, 5))
resid(fit)
set.seed(123)
n <- 100
set.seed(123)
n <- 100
x <- round(rnorm(n, mean = 87, sd = 10))
y <- round(x * rnorm(n, mean = 10))
x
y
fit <- lm(y~x)
par(mfrow = c(2, 2))
plot(fit, which = c(1:3, 5))
resid(fit)
runApp()
paste(round(rnorm(n, mean = 87, sd = 10)))
paste0(round(rnorm(n, mean = 87, sd = 10)), sep = ",")
as.character(round(rnorm(n, mean = 87, sd = 10)), sep = ",")
runApp()
