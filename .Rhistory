shiny::runApp()
y <- c(0,-1, 2)
x <- c(1:3)
y <- c(0,-1, 2)
lm(y ~ x)
x <- c(1:3)
y <- c(0,-1)
lm(y ~ x)
x <- c(1:2)
y <- c(0,-1)
lm(y ~ x)
x <- c(1)
y <- c(0)
lm(y ~ x)
runApp()
fit <- lm(c(960, 1110, 860, 760, 960, 785)~ c(100, 110, 100, 90, 97, 85))
print(fit)
runApp()
return(res)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp('~/Desktop/test')
runApp()
library(DT)
runApp()
data("marketing", package = "datarium")
head(marketing, 4)
fit <- lm(sales ~ youtube, data = marketing)
summary(fit)
plot(sales ~ youtube, data = marketing)
abline(fit)
p <- ggplot(marketing, aes(x = youtube, y = sales)) +
geom_point() +
stat_smooth(method = "lm") +
labs(title = bquote("Adj." ~ R^2 == .(signif(summary(fit)$adj.r.squared, 3))~
~ beta[0] == .(signif(fit$coef[[1]], 3))~
~ beta[1] == .(signif(fit$coef[[2]], 3))~
~ P-value == .(signif(summary(fit)$coef[2,4], 3)))) +
theme_minimal()
ggplotly(p)
p <- ggplot(marketing, aes(x = youtube, y = sales)) +
geom_point() +
stat_smooth(method = "lm") +
theme_minimal()
ggplotly(p)
runApp()
install.packages("plotly")
install.packages("plotly")
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
x <- NULL
is.empty(x)
runApp()
length(x)
runApp()
x <- "test"
length(x)
length(as.character(x))
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
x <- 1:3
y <- 1:4
fit <- lm(y ~ x)
y <- 2:4
fit <- lm(y ~ x)
fit
summary(fit)
fit$model
names(summary(fit))
summary(fit)$coefficients[,4]
summary(fit)$coefficients
runApp()
install.packages("plotly")
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
styler:::style_active_file()
runApp()
runApp()
styler:::style_active_file()
styler:::style_active_file()
shiny::runApp()
shiny::runApp()
